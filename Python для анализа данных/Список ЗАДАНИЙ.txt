1. Используя библиотеки math, cmath и time сравните скорость вычисления квадратного корня, синуса и логарифма 1000000 раз из введённого пользователем числа. Алгоритм должен содержать проверку корректности входных данных. Результаты приведите в простой таблице.

2. Составьте список, содержащий 3-5 элементов. В интерактивном режиме запросите у пользователя значения для каждого элемента списка, составьте соответствующий словарь. Алгоритм должен содержать проверку одинаковости типов вводимых значений. Под проверкой одинаковости подразумевается попытка преобразования вводимых данных в числовой формат: int / float, а в случае невозможности преобразовать остаётся str. Запишите словарь в файл.

3. Прочитайте файл 'complex.txt' и построчно выведите считанные комплексные числа, которые по модулю больше или равны определенному числу, строку "меньше" для меньших. Примечание: в связи с особенностью системы DiSpace файл упакован в zip-архив.

4. Задайте функцию, которая возвращает глобальную константу, произведение двух чисел, или возвращает сумму трёх чисел. Т.е. необходимо определить функцию 'fun()', которая ведёт себя так:

fun() -> константа

fun(1.0) -> не возвращает ничего / ошибка

fun(1.0,5.0) -> возвращает 6.0 (сумма)

fun(2.0,5,7) -> возвращает 70 (произведение)

fun(2.0,5,7,8,...,6) -> не возвращает ничего / ошибка

 

Все указанные задания должны выполняться в среде Python 3.7 или выше.

Результаты выполнения заданий должны быть оформлены в виде '.py' скриптов и содержать комментарии в коде.